class Solution:
    def findRedundantConnection(self, edges: List[List[int]]) -> List[int]:
        parent = list(range(len(edges)+1))
        
        def find(x):
            if parent[x]!=x:
                parent[x]= find(parent[x])
            return parent[x]
        def union(x,y):
            parentOfX,parentOfY = find(x), find(y)
            if parentOfX != parentOfY:
                parent[parentOfX] = parentOfY
                return True
            else:
                return False
        
        for a,b in edges:
            if not union(a,b):
                return [a,b]
        
        return None
            

# Do not edit the class below except for the buildHeap,
# siftDown, siftUp, peek, remove, and insert methods.
# Feel free to add new properties and methods to the class.
class MinHeap:
    def __init__(self, array):
        # Do not edit the line below.
        self.heap = self.buildHeap(array)

    def buildHeap(self, array):
        lastParentIndex = (len(array)-2)//2
		for i in reversed(range(lastParentIndex+1)):
			siftDown(array[i])
    def siftDown(self):
        # Write your code here.
        pass

    def siftUp(self, currIndex, array):
		currParent = (currIndex-1)//2
		while currIndex>0 and self.heap[currParent]>self.heap[currIndex] :
			self.swap(currParent, currIndex)
			currIndex = currParent
			currParent = (currIndex-1)//2
			
		
    def peek(self):
        return self.heap[0]

    def remove(self):
        swap[0, len(self.heap)-1, self.heap]
		valueToRemove = self.heap.pop()
		siftDown(self.heap[0])
		return valueToRemove

    def insert(self, value):
        self.heap.append(value)
		siftUp(value)

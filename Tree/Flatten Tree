# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def flatten(self, root: TreeNode) -> None:
        """
        Do not return anything, modify root in-place instead.
        """
        def helper(node):
            if node is None:
                return 
            if node.left is None and node.right is None:
                return node
            
            leftTail = helper(node.left)
            
            rightTail = helper(node.right)
            
            if node.left:
                leftTail.right = node.right
                node.right = node.left
                node.left = None
            
            return rightTail if rightTail else leftTail
        
        helper(root)

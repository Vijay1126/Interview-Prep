# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def widthOfBinaryTree(self, root: TreeNode) -> int:
        
        
        stack = deque([[root, 0]])
        width = 1
        while stack:
            for i in range(len(stack)):
                curr = stack.popleft()
                index = curr[1]
                if curr[0].left:
                    stack.append([curr[0].left,2*index])
                if curr[0].right:
                    stack.append([curr[0].right,2*index+1])
            if stack:
                width = max(width,stack[-1][1]-stack[0][1]+1)
        return width
   

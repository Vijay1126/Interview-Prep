class MyHashSet:

    def __init__(self):
        """
        Initialize your data structure here.
        """
        self.hash = 2069
        self.map = [Bucket() for _ in range((self.hash))]
        

    def add(self, key: int) -> None:
        insert = key%self.hash
        self.map[insert].insert(key)

    def remove(self, key: int) -> None:
        insert = key%self.hash
        self.map[insert].delete(key)

    def contains(self, key: int) -> bool:
        """
        Returns true if this set contains the specified element
        """
        insert = key%self.hash
        return  self.map[insert].contain(key)
        
class Bucket:
    def __init__(self):
        self.bucket = []
    
    def insert(self, key):
        
        if not self.contain(key):
            self.bucket.append(key)
    
    def delete(self, key):
        for index, value in enumerate(self.bucket):
            if value == key:
                del self.bucket[index]
    
    def contain(self, key):
        for index, value in enumerate(self.bucket):
            if value == key:
                return True
        return False
# Your MyHashSet object will be instantiated and called as such:
# obj = MyHashSet()
# obj.add(key)
# obj.remove(key)
# param_3 = obj.contains(key)

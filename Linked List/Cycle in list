# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def hasCycle(self, head: ListNode) -> bool:
        if head is None:
            return False
         
        slow = head
        if head.next is not None:
            fast = head.next
        
        while(slow.next is not None and fast.next is not None and fast.next.next is not None):
            if slow == fast:
                return True
            slow = slow.next
            fast = fast.next.next
        # if slow.next is None or fast.next.next is None:
        #     return False
        return False

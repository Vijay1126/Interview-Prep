# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def removeNthFromEnd(self, head: ListNode, n: int) -> ListNode:
        
        if head is None or head.next is None:
            return None
        slow,fast = head,head
        
        while(n!=0 and fast.next is not None):
            fast = fast.next
            n-=1
        if n ==1:
            return head.next
            
        while(fast.next is not None):
            slow = slow.next
            fast = fast.next
        slow.next = slow.next.next
        
        return head
        
      Points:
      1. The edge case where the head is the one to be removed is TRICKYYYYY

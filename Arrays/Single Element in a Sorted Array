class Solution:
    def singleNonDuplicate(self, nums: List[int]) -> int:
        for i in range(0, len(nums) - 2, 2):
            if nums[i] != nums[i + 1]:
                return nums[i]
        return nums[-1]



class Solution:
    def singleNonDuplicate(self, nums: List[int]) -> int:
        
        first = 0
        last = len(nums)-1
        
        while first<last:
            mid = (first+last)//2
            #1,1,2,2,3,3,4,4
            evenCount = (last-mid)%2==0
            
            if nums[mid]==nums[mid-1]:
                if evenCount:
                    last = mid-2
                else:
                    first = mid+1
            elif nums[mid]==nums[mid+1]:
                if evenCount:
                    first = mid+2
                else:
                    last = mid-1
            else:
                return nums[mid]
        return nums[first]
            

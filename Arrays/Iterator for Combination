class CombinationIterator:
    def generateCombinations(self, word,curr,index,length,output):
        if len(curr)==length:
            output.append(curr[:])
        else:
            for i in range(index, len(word)):
                self.generateCombinations(word, curr+word[i], i+1, length, output)
        return sorted(output)

    def __init__(self, characters: str, combinationLength: int):
        
        self.output = self.generateCombinations(characters, "" , 0, combinationLength, [])    
        self.start = 0
    def next(self) -> str:
        self.start+=1
        return self.output[self.start-1]

    def hasNext(self) -> bool:
        if self.start <= len(self.output)-1:
            return True 
        else:
            return False
        


# Your CombinationIterator object will be instantiated and called as such:
# obj = CombinationIterator(characters, combinationLength)
# param_1 = obj.next()
# param_2 = obj.hasNext()
